#!/usr/bin/env sh

# A posix-friendly tee hack for emulating process substitution
# usage: shtee [command ...]

if test -n "${DEBUG+_}"; then
  set "-${DEBUG_OPTS:-xv}"
fi

test "$#" -gt 0 || { tee >/dev/null ; exit 0 ; }

unset -v datadir && unset -v id && unset -v id_fmt || exit 1

trap 'rm -rf "${datadir}"; trap - INT;  kill -INT  "$$"' INT
trap 'rm -rf "${datadir}"; trap - HUP;  kill -HUP  "$$"' HUP
trap 'rm -rf "${datadir}"; trap - ABRT; kill -ABRT "$$"' ABRT
trap 'rm -rf "${datadir}"; trap - PIPE; kill -PIPE "$$"' PIPE
trap 'rm -rf "${datadir}"; trap - ALRM; kill -ALRM "$$"' ALRM
trap 'rm -rf "${datadir}"; trap - TERM; kill -TERM "$$"' TERM 
trap 'rm -rf "${datadir}"' EXIT

datadir=$(mktemp -d --tmpdir "${0##*/}.XXXXXXXX") &&
  mkfifo -- "${datadir}/-" ||
  exit 1

id=
id_fmt=%0${##}d

while test "$#" -gt 0; do
  printf -- "${id_fmt}\n" "$(( ${id:-0} + 1 ))"
  read -- id
  if mkfifo -- "${datadir}/${id}-0"; then
    (eval "$1") <"${datadir}/${id}-0" >"${datadir}/+${id}-1" &
  fi
  shift
done <>"${datadir}/-" >&0

tee -- "${datadir}"/*-0 >/dev/null
wait

cat "${datadir}"/*-1

exit 0
