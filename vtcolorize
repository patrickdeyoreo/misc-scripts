#!/usr/bin/env sh
#
# Apply colorschemes to a vitual console

# Define a function to print helpful messages
help()
{
  case "$#" in
    0) sed q ;;
    *) cat - ;;
  esac
} << @EOF
${0##*/}: usage: ${0##*/} [-h] [-n] [-r] [FILE]
    Set the virtual console colors.

    Color definitions are read from FILE. If FILE is '-' or is not given,
    definitions are read from standard input.

    Options:
      -n    Inhibit ${0##*/} from clearing the screen.
      -r    Reset all colors to their original values.

    Colors are defined using a restricted form of the Xresources format:
      [*][.]color<N>:#<RGB>
    where N is a non-negative integer and RGB is a 24-bit hexadecimal value.

    Each definition must be on a separate line.

    The following are examples of valid definitions:
      color0  : #2a2a2a
      *color0 : #2A2A2A
      *.color0: #2a2a2a

    Also see appres(1), xrdb(1), X(7)
@EOF

# Parse options
OPTIND=1
while getopts ':hnr' 'opt'
do
  case "${opt}" in
    'n')
      clear=''
      ;;
    'r')
      tput 'oc'
      exit 0
      ;;
    'h')
      help 1
      exit 0
      ;;
    '?')
      { printf '%s: -%s: invalid option\n' "${0##*/}" "${OPTARG}" 
        help
      } 1>&2
      exit 2
      ;;
  esac
done
shift "$((OPTIND - 1))"

# Check arguments
if test "$#" -gt 1
then
  printf '%s: too many arguments\n' "${0##*/}"
  help
fi 1>&2

if test "$#" -lt 1
then
  set -- '/dev/stdin'
fi

# Apply colors
# shellcheck disable=SC2016
clear=${clear-$(tput clear)} IFS=' ' sed -E -n '
/^[[:blank:]]*\*?\.?color[[:digit:]]+[[:blank:]]*:[[:blank:]]*#[[:xdigit:]]{6}[[:blank:]]*$/{
s@[^[:digit:]]+([[:digit:]]+)[^[:xdigit:]]+#(..)(..)(..).*@tput initc \1 "$((0x\2*1000/256))" "$((0x\3*1000/256))" "$((0x\4*1000/256))"@ep
e printf "%s" "${clear}"
}' -- "$1"


# vi:ft=sh:tw=0
