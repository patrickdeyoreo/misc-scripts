#!/usr/bin/env sh

## Set terminal colors from a file


## Show the usage info, or, if given an argument, the long help.
help() {
  case $# in 
    0) sed q ;; # Print usage line
    *) cat   ;; # Print full help
  esac
} << \}}}
usage: vt-colorizer.sh [-h] [-r] [--] [file]
  Set the virtual console colors.

  If FILE is -, data is read from standard input.

  The -r option resets all colors to their original values.

  Color definitions follow a strict subset of the Xresources format spec.
  In EBNF (Extended Backusâ€“Naur Form):
    definition = [ "*" ] , "color" , number , { whitespace } , ":" ,
                 { whitespace } , "#" , rrggbb
  
  Any line not conforming this format will be skipped.

  The following examples are valid definitions:
    color1 : #1B1B1B
    *color2: #d7261f
    color10: #B8bb26
}}}


## Check non-option arguments.
ckargs() {

  test "$#" -eq 1 || {
    help
    return 1
  }

  test -e "$1" || {
    printf 1>&2 'error: %s: No such file or directory\n' "${0##*/}" "$1"
    return 1
  }

  test -f "$1" || {
    printf 1>&2 'error: %s: Not a regular file\n' "${0##*/}" "$1"
    return 1
  }

  test -r "$1" || {
    printf 1>&2 '%s: %s: Permission denied\n' "${0##*/}" "$1"
    return 1
  }

}


## Load colors from a file.
apply() {
  sed -nE '
  /^[[:blank:]]*\*?color[[:digit:]]+[[:blank:]]*:[[:blank:]]*#[[:xdigit:]]{6}[[:blank:]]*$/!b
  s_.*color([[:digit:]]+).*#(..)(..)(..).*_tput initc \1 $(( 0x\2 * 1000 / 256 )) $(( 0x\3 * 1000 / 256 )) $(( 0x\4 * 1000 / 256 ))_ep
  ' "$1"
}


## Do the thing.
main() {

  if ! command -v tput 1>/dev/null; then 
    printf 1>&2 '%s: missing required executable '"'tput'"'\n' "${0##*/}"
    return 3
  fi

  local OPTIND=1
  local OPTARG=''
  local opt=''

  while getopts ':chr' opt; do
    case ${opt} in
      r)
        tput oc
        return 0
        ;;
      h)
        help
        return 0
        ;;
      \?)
        printf 1>&2 '%s: unrecognized option '"'%s'"'\n' "${0##*/}" "${OPTARG}"
        return 2
        ;;
    esac
  done
  shift "$((OPTIND - 1))"

  ckargs "$1" && apply "$1"
}


## Clear screen on exit
trap 'tput clear' EXIT

## Run the beast.
main "$@"



# vi:et:ft=sh:sts=2:sw=2:ts=8
